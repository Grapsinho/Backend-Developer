მოკლედ რას ნიშანვს ეხლა ეს ანუ ეს არის Entity-Relationship მოდელი არის ცხრილის სტრუქტურისა და ლოგიკურად დაკავშირებული ცხრილებს შორის ურთიერთობების ვიზუალური წარმოდგენა 

Entity ეს არის ობიექტი რომლის შესახებაც გვინდა ინფორმაციის შენახვა

Attributes ეს არის რაღაც განსაზღვრული ინფორმაციები ენთითის შესახებ მაგალითად სახელი, გვარი და ასშ...

Primary key ეს არის ატრიბუტი რომელიც არის უნიკალური

Composite Attribute ეს არის ატრიბუტი რომლის ასერომვთქვათ გახლეჩვა შეგვიძლია უფრო პატარა ატრიბუტებად მაგალითად:
name შეგვიძლია გავხლიჩოთ lname, fname და ასშ...

Multi-valued Attribute ეს არის ატრიბუტი რომელსაც შეუძლია ქონდეს ერთზე მეტი მნიშვნელობა მაგალითად: ადამიანს შეიძლება ქონდეს ერთი სახელი მაგრამ დადიოდეს რამდენიმე სპორტზე და ასშ...

Derived Attribute ეს არის ატრიბუტი რომელიც შეიძლება მომდინარეობდეს სხვა ატრიბუტებიდან მაგალითად სტუდენტს რომელსაც აქვს მაღალი შეფასებები ეძლევა სტიპენდია და ასშ...

Multiple Entities შეგვიძლია გვქონდეს ერთზე მეტი ენტიტი

როდესაც გვაქვს რამოდენიმე ენტიტი ჩვენ გვინდა რაღაცნაირად დავაკავშიროთ ისინი 

მთლიანი მონაწილეობა(Total Participation) - თითოეული სუბიექტი ჩართულია ურთიერთობაში. მთლიანი მონაწილეობა წარმოდგენილია ორმაგი ხაზებით. ნაწილობრივი მონაწილეობა(Partial participation) - ყველა სუბიექტი არ არის ჩართული ურთიერთობაში. ნაწილობრივი მონაწილეობა წარმოდგენილია ერთი ხაზით.

Relationship Attribute ეს არის ატრიბუტი ურთიერთობის შესახებ მაგალითად ჩვენ ვართ სტუდენტი დავუკავშირდით რაღაც კლასს და ამ კლასში ავიღეთ ნიშანი ეს ნიშანი იყოს Relationship Attribute ეს

SQL-ში, ურთიერთობის კარდინალურობა ეხება ერთი ერთეულის შემთხვევების რაოდენობას, რომელიც შეიძლება ასოცირებული იყოს სხვა ერთეულის შემთხვევებთან ურთიერთობის საშუალებით. SQL-ში არსებობს ურთიერთობების კარდინალურობის სამი ძირითადი ტიპი:

ერთი-ერთზე (1:1) ურთიერთობა: ერთი-ერთთან ურთიერთობაში, ერთი ერთეულის ყოველი ეგზემპლარი ასოცირდება მეორე ერთეულის მხოლოდ ერთ ეგზემპლართან და პირიქით. ამ ტიპის ურთიერთობა ჩვეულებრივ არ გამოიყენება SQL-ში, მაგრამ ის შეიძლება სასარგებლო იყოს გარკვეულ შემთხვევებში, როდესაც ურთიერთობა ორ ერთეულს შორის ძალიან მკაცრია.

ერთი-მრავალზე (1:N) ურთიერთობა: ერთ-ერთ-მრავალზე ურთიერთობაში, ერთი ერთეულის თითოეული ეგზემპლარი შეიძლება ასოცირებული იყოს სხვა ერთეულის რამდენიმე ეგზემპლართან, მაგრამ მეორე ერთეულის ყოველი ეგზემპლარი შეიძლება ასოცირებული იყოს მხოლოდ ერთ ეგზემპლართან. პირველი სუბიექტის. მაგალითად, ერთ მომხმარებელს შეიძლება ჰქონდეს რამდენიმე შეკვეთა, მაგრამ თითოეული შეკვეთა ასოცირდება მხოლოდ ერთ მომხმარებელთან.

მრავალი-მრავალზე (N: M) ურთიერთობა: ბევრი-მრავალთან ურთიერთობაში, ერთი ერთეულის თითოეული ეგზემპლარი შეიძლება ასოცირებული იყოს სხვა ერთეულის მრავალ ეგზემპლართან და პირიქით. SQL-ში ბევრი-მრავალთან ურთიერთობის განსახორციელებლად, ჩვეულებრივ იქმნება მესამე ცხრილი, რათა შეინახოს ურთიერთობები ორ ერთეულს შორის. ამ ცხრილს ხშირად მოიხსენიებენ, როგორც შეერთების ცხრილს ან ასოციაციურ ცხრილს. მაგალითად, ბევრი სტუდენტი შეიძლება ჩაირიცხოს მრავალ კურსზე და თითოეულ კურსს შეიძლება ჰყავდეს რამდენიმე სტუდენტი ჩარიცხული. შეერთების ცხრილი ინახავს ურთიერთობას თითოეულ სტუდენტსა და თითოეულ კურსს შორის, რომელშიც ისინი არიან ჩარიცხული.


