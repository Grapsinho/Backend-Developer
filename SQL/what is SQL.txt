SQL: არის ენა რომელიც გვეხმარება ვიურთიერთოთ RDBMS_სთან მაგალითად ჩვენ ვიყენებთ SQL_ს რომ მივიღოთ ინფორმაცია წავშალოთ და ასშ. კიდევ შეგვიძლია განვსაზღვროთ როგორი უნდა იყოს ეს მაგიდები შევქმნათ ეს მაგიდები და ასშ...

SQL არის ენა რომლითაც მოქმედებს mySQL ჩვენ ამ პროგრამასთან ამ აპლიკაციასთან ვურთიერთობთ ამ SQL ენით

მაგრამ ეს ენა ყველა RDBMS_თან ერთანირი არაა შეიძლება ჩვენმა კოდმა იმუშავოს mySQL_ზე და არ იმუშავო oracle_ზე

SQL: ასერომვთქვათ შეიცავს 4 ტიპის ენას 

1) Data Query Language (DQL): ანუ ეს ძირითადად გამოიყენება ინფორმაციის მისაღებად იმ ინფორმაციის მისაღებად რომელიც უკვე დამახსოვრებულია

2) Data Definiton Language (DDL): ეს გამოიყენება რომ განვსაზღვროთ database_ის სქემა ანუ სქემა ეს არის თუ როგორი ქოლუმნები და როუები ექნება ჩვენს მაგიდას და ასშ...

3) Data Control Language (DCL): ანუ ეს უკვე აკონტროლებს წვდომას ჩვენს database_ზე და ასევე ეს აკონტროლებს მომხმარებელს თუ რა სახის database_ზე ექნება წვდომა

4) Data Manipulation Language (DML): ეს გამოიყენება ინფორმაციის დააბდეითებისთვის წაშლისთვის და ასშ...
ინფორმაციაზე მანიპულირებისთვის

რა არის Database (DB)?
ეს არის ნებისმიერი ინფორმაცია, ინფორმაციის რაღაც კოლექცია რომელიც რაღაცასთან არის დაკავშირებული და ჩვენ მას ვინახავთ სადმე მაგალითად ჩვენი ტელეფონის კონტაქტები რომ ჩავწეროთ სადმე ფურცელზე ან თუმდაც საყიდლების სია ეს ყველაფერი არის Database_ის მაგალითები

/////////////////////////////////////////////

Database Management Systems (DBMS)

ეს არის სპეციალური სოფთვეარ პროგრამა რომელიც ეხმარება მომხმარებელს შექმნას და შეინარჩუნოს database

როდესაც გაქვს შესანახი ბევრი ინფორმაცია DBMS დაგეხმარება ამაში ასევე ის ურთიერთქმედებს სხვადასხვა სოფთვეარ აპლიკაციებთან პროგრამულ ენებთან.

/////////////////////////////////////////////

C.R.U.D

Create Read(retrieve) Update Delete

ეს 4 რაღაცაა რაც გვინდა DBMS ისგან რომ წარმოგვიდგინოს ჩვენ

/////////////////////////////////////////////

Two Types of Databases

Relation Databases (SQL)

ორგანიზებას უკეთებს მონაცემებს ერთ ან მეტ მაგიდაზე ასე რომვთქვათ

ყველა მაგიდას აქვს სვეტები და რიგები

და უნიკალური key იცნობს ამ რიგებს


როგორ ინახება ურთიერთობითი Database_ები 
ამისათვის გვჭირდება Reltaional DBMS ეს ეხმარება მომხმარებლებს შეინახონ database ასეთებია მაგალითად: mySQL, Oracle, postgreSQL და სხვა

Structured Query Language (SQL)
ეს არის სტანდარტული ენა რათა ვიურთიერთოთ RDBMS_თან და გვახსოვდეს რომ RDBMS არის სოფთვეარ აპლიკაცია რომელიც გვეხმარება შევინახოთ მონაცემები და ვიურთიერთოთ მათთან

თუმცა, მონაცემთა ბაზის მართვის სხვადასხვა რელაციური სისტემა განახორციელებს SQL-ს ოდნავ განსხვავებულად, ასე რომ, ყველა SQL კოდი, რომელსაც იყენებთ მონაცემთა ბაზის მართვის ერთ სისტემაში, არ გადადის მეორეზე მცირედი ცვლილებების გარეშე


//////////////////////////////////////////////
ყველაფერი რაც არ არის ურთიერთობითი 
Non-Reltaional (noSQL / not just SQL)

მონაცემთა ორგანიზება სხვა არაფერია, თუ არა ტრადიციული ცხრილი

key-value შენახვები

დოკუმენტები (JSON, XML, etc)

Graphs

Non-Reltaional databases შეიძლება იყოს მაგალითად JSON ვიცით ის როგორც ინახავს ინფორმაციას key-value დახმარებით და არის ასეთი ბევრი რა

ანუ როგორც relational databases_ებზე გვაქ management system_ები ისეა აქაც NRDBMS ასეთებია მაგალითად mongoDB, dynamoDB,apache cassandra და სხვა

თუ relational databases_ებზე გვაქ სტანდარტული ენა რათა ვიურთიერთოთ მათთან თუმცა აქ ასეთი არ გვაქ

ანუ NRDBMS იმპლემენტაციას უკეთებს თავისივე ენას რათა წარმოადგინოს CRUD და სხვადასხვა ოპერაციები database_ზე





 




