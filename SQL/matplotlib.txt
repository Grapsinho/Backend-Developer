from matplotlib import pyplot as plt
ჯერ ვაიმპორტებთ


plt.plot(names, salary) # აქ ვამატებთ ჩვენს მონაცემებს names = X salary = Y
plt.xlabel('employee names') # აქ უბრალოდ აღწერას ვამატებთ
plt.ylabel('their salary')
plt.title('employee names with their salary')

plt.show() # და ბოლოს ეს რათა ვნახოთ ჩვენი დიაგრამები


ვამატებთ ლეგენდას ანუ რო გავიგოთ რომელი ხაზი რომლისაა
plt.plot(names, salary, label='not reversed') # აქ ვამატებთ ჩვენს მონაცემებს names = X salary = Y
plt.plot(names, salary1, label='reversed')

plot_ის მაგივრად bar თუ მივუთითებთ იქნება ოთხკუთხედები 

plt.legend() ეს აუცილებელია ბოლოში

ასევე შეგვიძლია ეს ჩვენი ხაზებსაც მივცეთ სტილები

ანუ plot_ში y_ის გვერდით ვწერთ 'და აქ უკვე სტილი'

მაგალითად: 'k--' ეს არის წყვეტილი ხაზები და ფერი შავი
და მოკლედ ამის სტილები შემიძლია დავსერჩო რა

ამეებით შეგვიძლია ცალცალკე დავწეროთ
color=''
linestyle=''
marker=''

linewidth=''

plt.grid(True) კუბიკებს დაგვიხატავს ჩვენს დიაგრამაზე

plt.style.available ეს რო დავპრიტოთ კონსოლში ამოგვიგდებს ყველა სტილს რაც შეგვიძლია მივუთითოთ ჩვენს დაიგრამას 

მაგ: plt.style.use('fivethirtyeight') ეს ერთერთია ggplot ესეც არის


plt.savefig('რა სახელით გვინდა რომ ჩასეივდეს') ვასეივებთ





ესეიგი როცა გვაქ ბევრი რაღაც მონაცემები და ვალაგებთ მათ დიაგრამაზე ისინი ეწყობიან ერთმანეთის თავზე ისერომ ზოგი არჩანს ამის დასაფიქსად პირველრიგში გვჭირდება numpy  import numpy as np

შემდეგ ვქმნით index = np.arange(len(salary)) ასეთ რაღაცას ანუ აქ არგუმენტათ უნდა გადავცეთ x_ზე მყოფი მონაცემების სიგრძე ეს შექმნის ჩვ ლისტს 0დან ბოლომდე

შემდეგ გვინდა width = 0.25 აქ რასაც გვინდა მივუთითებ ანუ სიგანე რამდენი იყოს

              ამ ინდექსებს ვაკლებთ ჩვენს სიგანეს ეს გაწევს ამ ხაზზს მარჯვნივ
plt.bar(index-width, salary, width=width, label='not reversed')
plt.bar(names, salary1, width=width, label='reversed')

და არ დაგვავიწყდეს სიგანის გადაცემა 

ეს ყველაფერი ასე რომ დავტოვოთ მაშინ ჩვენი სახელები აღარ იქნება რომ დარჩეს უნდა ვქნათ ეს

plt.xticks(ticks=index, labels=names) და ეგაა რამდენიმე ხაზი შეგვიძლია დავტიოთ ერთ დიაგრამაზე




