მოკლედ ეს სორტი შეგვიძლია დავყოთ სამ ნაწილად პირველი როდესაც ვიღებთ დაულაგებელ ლისტს, შემდეგ ამ ლისტს ვყოფთ იქმადე სანამ ყველა ელემენტი არ იქნება სწორად დახარისხებული ანუ ჯერ შუაზე ვყოფთ მერე ამას კიდე ვანაწევრებთ და ასშ..., შემდეგ უკვე ვაწებეთ ერთმანეთთან და რათქმაუნდა ამ ელემენტებს ვადარებთ ერთმანეთთან თუ პატარაა ელემენტი თავში დაჯდება და ასშ...


def merge_Sort (array):

    # ეს არის base case რათა ჩვენი რეკურსია გავაჩეროთ
    if len(array) <= 1:
        return array
    else:
        # აქ ვიღებთ შუა ელემენტეს და შემდეგ ვშლით ჩვენს ლისტს
        mid = len(array) // 2
        left_l = array[:mid]
        right_l = array[mid:]

        # ვაკეთებთ რაკურისას რათა ყოველი ახალი ლისტი დაიშალოს
        merge_Sort(left_l)
        merge_Sort(right_l)

        j = 0
        k = 0
        i = 0

        # მოკლედ აქ უკვე დაყოფილი ლისტებიდან ვადარებთ ერთმანეთს ელემენტებს
        # და თუ i j გახდება მეტი თავიანთ ლისტებზე მაშინ ვაჩერებთ ესეიგი აღარ დარჩა ელემენტი და უკვე ბოლოს
        # იმ ელემენტებს ვამოწმებთ რომელბიც მარტო არიან და ვსვავთ ლისტში მთავარ ლისტში
        while i < len(left_l) and j < len(right_l):
            if left_l[i] < right_l[j]:
                array[k] = left_l[i]
                k += 1
                i += 1
            else:
                array[k] = right_l[j]
                k += 1
                j += 1

        while i < len(left_l):
            array[k] = left_l[i]
            k += 1
            i += 1

        while j < len(right_l):
            array[k] = right_l[j]
            k += 1
            j += 1

l1 = [5,2,6,1,3,4]

merge_Sort(l1)
print(f"Sorted List: {l1}")

