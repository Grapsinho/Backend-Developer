class Currency:
    def __init__(self, value, unit="GEL"):
        self.value = value
        self.unit = unit

    def __str__(self):
        return f"{round(self.value, 2)} {self.unit}"

    def changeTo(self, currency):
        if currency == "GEL":
            if self.unit == "GEL":
                return self.value
            elif self.unit == "EUR":
                return round(self.value / 0.3738, 2)
            elif self.unit == "USD":
                return round(self.value / 0.3945, 2)
        elif currency == "USD":
            if self.unit == "GEL":
                return round(self.value / 2.6250, 2)
            elif self.unit == "EUR":
                return round(self.value / 0.9690, 2)
            elif self.unit == "USD":
                return self.value
        elif currency == "EUR":
            if self.unit == "GEL":
                return round(self.value / 2.8050, 2)
            elif self.unit == "EUR":
                return self.value
            elif self.unit == "USD":
                return round(self.value / 1.0920, 2)

    def __add__(self, o):
        try:
            # usd to gel
            if self.unit == "GEL" and "USD":
                return round((self.value + o.value) / 0.3953, 2)
            # gel to usd
            elif self.unit == "USD" and "GEL":
                return round((self.value + o.value) / 2.6200, 2)
            # eur to usd
            elif self.unit == "USD" and "EUR":
                return round((self.value + o.value) / 0.9653, 2)
            # usd to eur
            elif self.unit == "EUR" and "USD":
                return round((self.value + o.value) / 1.0960, 2)
            # eur to gel
            elif self.unit == "GEL" and "EUR":
                return round((self.value + o.value) / 0.3727, 2)
            # gel to eur
            elif self.unit == "EUR" and "GEL":
                return round((self.value + o.value) / 2.8130, 2)
            else:
                return round((self.value + o.value), 2), self.unit
        except AttributeError:
            if isinstance(o, int):
                return Currency(self.value + o, self.unit)

    def __mul__(self, other):
        return Currency(self.value * other, self.unit)

    def __rmul__(self, other):
        if isinstance(other, int):
            return Currency(self.value * other, self.unit)


obj1 = Currency(230, "EUR")
obj2 = Currency(500, "USD")